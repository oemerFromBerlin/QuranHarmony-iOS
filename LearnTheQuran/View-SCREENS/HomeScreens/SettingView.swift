//
//  SettingView.swift
//  LearnTheQuran
//
//  Created by √ñmer Tarakci on 19.02.24.
//

import SwiftUI

struct SettingView: View {
    @Environment(\.colorScheme) var colorScheme
    @State private var textHeight: CGFloat = 0 // Variable f√ºr die Text-H√∂he
    @State private var ausgew√§hlteSprache: Sprachen = .deutsch
    enum Sprachen {
        case deutsch
        case englisch
        case t√ºrkisch
    }
    var sprachText: String {
        switch ausgew√§hlteSprache {
        case .deutsch:
            return """
            Liebe Geschwister im Glauben und liebe Freunde,
            
            As-Salamu Alaykum
            
            Vielen Dank, dass Du dich f√ºr unsere App Quran Harmony entschieden hast!
            
            Entdeckt mit unserer App die Weisheiten des Quran in einem schlichten, aber eleganten Design. Sie erleichtert den Zugang zu den heiligen Schriften und vertieft eure Glaubensverbindung. Werdet Teil unserer Gemeinschaft.
            
            Die App ist f√ºr alle zug√§nglich und wird bald auch im t√ºrkischen und englischem verf√ºgbar sein. Eure Sicherheit und Privatsph√§re sind gesichert; wir speichern nur eure E-Mail f√ºr den Newsletter (sofern Du dich registrierst).
            
            Unsere App ist kostenfrei, doch eure Unterst√ºtzung durch Feedback, Anregungen und Spenden hilft uns, unseren Service kontinuierlich zu verbessern. M√∂ge Allah uns rechtleiten.
            
            Wenn Du dein uns Feedback geben m√∂chtest, kannst Du uns √ºber folgende E-Mail kontaktieren:
            oemer36@hotmail.de
            
            Wenn auch Du uns finanziell unterst√ºtzen m√∂chtest, kannst Du uns durch freiwillige Spenden unterst√ºtzen. Einfach via PayPal "Geld an einen Freund senden" an:
            oemer36@hotmail.de
            
            In Verbundenheit,
            √ñmer Tarakci
            CEO Quran Harmony
            """
        case .englisch:
            return """
            Dear brothers and sisters in faith and dear friends,
            
            As-Salamu Alaykum,
            
            Thank you for choosing our app, Quran Harmony!
            
            Discover the wisdoms of the Quran through our app's simple yet elegant design. It facilitates access to the sacred scriptures and deepens your connection to faith. Become part of our community.
            
            The app is accessible to all and will soon be available in Turkish and English. Your security and privacy are assured; we only store your email for the newsletter (if you register).
            
            Our app is free, but your support through feedback, suggestions, and donations helps us continuously improve our service. May Allah guide us rightly.
            
            If you would like to provide us with feedback, you can contact us via the following email:
            oemer36@hotmail.de
            
            If you would also like to support us financially, you can do so through voluntary donations. Simply use PayPal to "Send money to a friend" at:
            oemer36@hotmail.de
            
            With kind regards,
            √ñmer Tarakci
            CEO of Quran Harmony
            """
        case .t√ºrkisch:
            return """
            Sevgili inan√ß karde≈ülerimiz ve deƒüerli dostlarƒ±mƒ±z,
            
            As-Salamu Alaykum
            
            Quran Harmony uygulamamƒ±zƒ± se√ßtiƒüiniz i√ßin te≈üekk√ºr ederiz!
            
            Uygulamamƒ±z ile Kuran'ƒ±n hikmetlerini sade fakat ≈üƒ±k bir tasarƒ±mda ke≈üfedin. Kutsal yazƒ±lara eri≈üimi kolayla≈ütƒ±rƒ±r ve inancƒ±nƒ±zla baƒüƒ±nƒ±zƒ± derinle≈ütirir. Topluluƒüumuzun bir par√ßasƒ± olun.
            
            Uygulamamƒ±z herkese a√ßƒ±ktƒ±r ve yakƒ±nda T√ºrk√ße ve ƒ∞ngilizce olarak da kullanƒ±labilecek. G√ºvenliƒüiniz ve gizliliƒüiniz garanti altƒ±ndadƒ±r; yalnƒ±zca haber b√ºlteni i√ßin e-postanƒ±zƒ± saklarƒ±z (kayƒ±t olursanƒ±z).
            
            Uygulamamƒ±z √ºcretsizdir, ancak geri bildirimleriniz, √∂nerileriniz ve baƒüƒ±≈ülarƒ±nƒ±z servisimizi s√ºrekli iyile≈ütirmemize yardƒ±mcƒ± olur. Allah bizi doƒüru yola iletir.
            
            Bize geri bildirimde bulunmak isterseniz, a≈üaƒüƒ±daki e-posta adresi √ºzerinden bizimle ileti≈üime ge√ßebilirsiniz:
            oemer36@hotmail.de
            
            Maddi olarak destek olmak isterseniz, PayPal √ºzerinden "Bir arkada≈üa para g√∂nder" se√ßeneƒüi ile g√∂n√ºll√º baƒüƒ±≈üta bulunabilirsiniz:
            oemer36@hotmail.de
            
            Saygƒ±larƒ±mƒ±zla,
            √ñmer Tarakci
            Quran Harmony CEO'su
            """
        }
    }
    
    var backgroundColor: Color {
        colorScheme == .dark ? .black : .white
    }
    
    var foregroundColor: Color {
        colorScheme == .dark ? .white : .black
    }
    
    var accentColor: LinearGradient {
        LinearGradient(gradient: Gradient(colors: [.blue.opacity(0.7), .green.opacity(0.7)]), startPoint: .leading, endPoint: .trailing)
    }
    
    let circles: [CircleData] = [
        CircleData(id: 1, size: 100, xPosition: .random(in: 0...UIScreen.main.bounds.width), blurRadius: 2, color: Color.blue.opacity(0.7)),
        CircleData(id: 3, size: 150, xPosition: .random(in: 0...UIScreen.main.bounds.width), blurRadius: 6, color: Color.green.opacity(0.7)),
        CircleData(id: 4, size: 75, xPosition: .random(in: 0...UIScreen.main.bounds.width), blurRadius: 5, color: Color.purple.opacity(0.5)),
        CircleData(id: 5, size: 225, xPosition: .random(in: 0...UIScreen.main.bounds.width), blurRadius: 5, color: Color.orange.opacity(0.5)),
        CircleData(id: 6, size: 30, xPosition: .random(in: 0...UIScreen.main.bounds.width), blurRadius: 5, color: Color.red.opacity(0.7)),
        CircleData(id: 7, size: 180, xPosition: .random(in: 0...UIScreen.main.bounds.width), blurRadius: 5, color: Color.black.opacity(0.7)),
        CircleData(id: 8, size: 20, xPosition: .random(in: 0...UIScreen.main.bounds.width), blurRadius: 5, color: Color.green.opacity(0.5)),
        CircleData(id: 9, size: 200, xPosition: .random(in: 0...UIScreen.main.bounds.width), blurRadius: 5, color: Color.white.opacity(0.7)),
        CircleData(id: 10, size: 200, xPosition: .random(in: 0...UIScreen.main.bounds.width), blurRadius: 5, color: Color.black.opacity(0.6)),
    ]
    
    var body: some View {
        NavigationStack {
            
            ZStack {
                ForEach(circles) { circle in
                    FloatingCircles(size: circle.size, blurRadius: circle.blurRadius, color: circle.color)
                }
                VStack{
                SprachauswahlButtons
                ScrollView {
                    VStack(spacing: 20) {
                        Text(sprachText)
                            .font(.system(size: 16))
                            .padding()
                            .foregroundColor(foregroundColor)
                            .background(RoundedRectangle(cornerRadius: 10).fill(foregroundColor.opacity(0.1)))
                            .overlay(RoundedRectangle(cornerRadius: 10).stroke(accentColor, lineWidth: 2))
                    }.padding()
                }
            }
            }.navigationTitle("√úber Quran Harmony")
                .toolbarBackground(Color.clear, for: .navigationBar)
            
        }
    }
    
    
    var SprachauswahlButtons: some View {
        HStack(spacing: 50) {
            SprachButton(land: "üá©üá™", sprache: .deutsch)
            SprachButton(land: "üá¨üáß", sprache: .englisch)
            SprachButton(land: "üáπüá∑", sprache: .t√ºrkisch)
        }
        .padding(.horizontal)
    }
    
    func SprachButton(land: String, sprache: Sprachen) -> some View {
        
        Button(action: {
            ausgew√§hlteSprache = sprache
        }) {
            Text(land)
                .font(.largeTitle)
                .frame(width: 45, height: 45)
                .foregroundColor(ausgew√§hlteSprache == sprache ? .white : foregroundColor)
                .background(ausgew√§hlteSprache == sprache ? foregroundColor : backgroundColor)
                .cornerRadius(30)
                .overlay(
                    RoundedRectangle(cornerRadius: 30)
                        .stroke(
                            LinearGradient(gradient: Gradient(colors: [.blue.opacity(0.7), .green.opacity(0.7)]), startPoint: .leading, endPoint: .trailing),
                            lineWidth: 1
                        )
                )
        }
    }
}

struct SettingView_Previews: PreviewProvider {
    static var previews: some View {
        SettingView()
    }
}
